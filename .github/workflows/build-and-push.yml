---
name: Build & Push

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 2 15 * *"

jobs:
  # Test, if the image can be build and Ansible is accessible
  test:
    name: Test Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            CREATED=${{ steps.date.outputs.date }}
            REVISION=${{github.sha}}
            VERSION=latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          push: false
          tags: docker-ansible:latest

      - name: Create container to verify the build
        run: docker run --cgroupns=host --detach --name test-container --privileged --volume '/sys/fs/cgroup:/sys/fs/cgroup:rw' docker-ansible

      - name: Verify Ansible is accessible in container
        run: docker exec --tty test-container env TERM=xterm ansible --version

  # If on main branch, build and release image
  release:
    name: Build & Push Image to Docker Hub
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            CREATED=${{ steps.date.outputs.date }}
            REVISION=${{github.sha}}
            VERSION=latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ github.repository }}:latest
